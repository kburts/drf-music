import json
 
from django.test import TestCase
from django.core.urlresolvers import reverse
 
from .models import Playlist, Song, User
 
 
class UserTests(TestCase):
    """
    Test to ensure that user creation works before testing things that require a user
    """
 
    def setUp(self):
        self.user = User.objects.create_user(
            username='testingUser', email='testuser@test.com', password='top_secret')
 
    def test_user_present(self):
        self.assertEqual(self.user.username, "testingUser")
 
 
class PlaylistTests(TestCase):
    """
    Tests for Playlist models
    """
    def setUp(self):
        self.user = User.objects.create_user(
            username='playlistTestingUser')
   
    def createPlaylist(self, title="testing_playlist", description="playlist's_description"):
        return Playlist.objects.create(
            title=title,
            description=description,
            user=self.user
        )
 
    def test_model_creation(self):
        testPlaylist = self.createPlaylist()
        self.assertTrue(Playlist(testPlaylist, Playlist))
        self.assertEqual(testPlaylist.__unicode__(), testPlaylist.title)
 
 
class SongTests(TestCase):
    """
    Tests for Song models
    """
    def setUp(self):
        self.user = User.objects.create_user(
            username='songTestingUser')
        self.playlist = Playlist.objects.create(
            title = "songTestingPlaylist",
            description = "Tests for Song model",
            user = self.user
        )
 
    def createSong(self, name="testing song", url="https://www.youtube.com/watch?v=DE-8yO3fnJ4"):
        return Song.objects.create(
            name=name,
            url=url,
            added_by=self.user,
            #playlist=self.playlist
        )
 
    def test_model_creation(self):
        testSong = self.createSong()
        self.assertTrue(Song(testSong, Song))
        self.assertEqual(testSong.__unicode__(), testSong.name)
 
    def test_custom_ytid(self):
        """
        Test the yt_id field which is generated by the model
        """
        testSong = self.createSong()
        self.assertEqual(testSong.get_youtube_id(), testSong.url[-11:])